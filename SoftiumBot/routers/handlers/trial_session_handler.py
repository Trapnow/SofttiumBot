from aiogram.types import Message
from aiogram import Router

from functions.functions_programs import validate_email, validate_phone, validate_class
from keyboards.reply_keyboards import found_out_about_us__kb
from states.trial_session_state import Trial
from aiogram.fsm.context import FSMContext
from aiogram.types import ReplyKeyboardRemove

router = Router(name=__name__)


@router.message(Trial.name)
async def name_handler(msg: Message, state: FSMContext):
    await state.update_data(name=msg.text)
    await state.set_state(Trial.child_name)
    await msg.answer("–ö–∞–∫ –∑–æ–≤—É—Ç —Ä–µ–±–µ–Ω–∫–∞?")


@router.message(Trial.child_name)
async def child_name_handler(msg: Message, state: FSMContext):
    await state.update_data(child_name=msg.text)
    await state.set_state(Trial.school)
    await msg.answer("–ò–∑ –∫–∞–∫–æ–π –≤—ã —à–∫–æ–ª—ã?")


@router.message(Trial.school)
async def school_handler(msg: Message, state: FSMContext):
    await state.update_data(school=msg.text)
    await state.set_state(Trial.grade)
    await msg.answer("–í –∫–∞–∫–æ–º –∫–ª–∞—Å—Å–µ —É—á–∏—Ç—Å—è –≤–∞—à —Ä–µ–±–µ–Ω–æ–∫? (—Ü–∏—Ñ—Ä–∞ –∏ –±—É–∫–≤–∞)")


@router.message(Trial.grade)
async def grade_handler(msg: Message, state: FSMContext):
    if not validate_class(msg.text):
        await msg.answer("–í–≤–µ–¥–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –∫–ª–∞—Å—Å")
    else:
        await state.update_data(grade=msg.text)
        await state.set_state(Trial.email)
        await msg.answer("–£–∫–∞–∂–∏—Ç–µ –∞–¥—Ä–µ—Å —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –ø–æ—á—Ç—ã")


@router.message(Trial.email)
async def email_handler(msg: Message, state: FSMContext):
    if not validate_email(msg.text):
        await msg.answer("–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email")
    else:
        await state.update_data(email=msg.text)
        await state.set_state(Trial.found_out_about_us)
        await msg.answer("–û—Ç–∫—É–¥–∞ –í—ã —É–∑–Ω–∞–ª–∏ –ø—Ä–æ –Ω–∞—Å?", reply_markup=found_out_about_us__kb())


@router.message(Trial.found_out_about_us)
async def email_handler(msg: Message, state: FSMContext):
    await state.update_data(found_out_about_us=msg.text)
    await state.set_state(Trial.phone)
    await msg.answer("–£–∫–∞–∂–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π –í–∞–º –º–æ–∂–µ—Ç –ø–µ—Ä–µ–∑–≤–æ–Ω–∏—Ç—å –º–µ–Ω–µ–¥–∂–µ—Ä.")


@router.message(Trial.phone)
async def phone_handler(msg: Message, state: FSMContext):
    if not validate_phone(msg.text):
        await msg.answer("–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞")
    else:
        await state.update_data(phone=msg.text)

        data = await state.get_data()

        await state.clear()

        await msg.bot.send_message(chat_id=-4860435909,
                                   text=f"–ò–º—è: {data["name"]}\n"
                                        f"–ò–º—è —Ä–µ–±—ë–Ω–∫–∞: {data["child_name"]}\n"
                                        f"–®–∫–æ–ª–∞: {data["school"]}\n"
                                        f"–ö–ª–∞—Å—Å: {data["grade"]}\n"
                                        f"–ü–æ—á—Ç–∞: {data["email"]}\n"
                                        f"–û—Ç–∫—É–¥–∞ —É–∑–Ω–∞–ª–∏ –æ –Ω–∞—Å: {data["found_out_about_us"]}\n"
                                        f"–¢–µ–ª–µ—Ñ–æ–Ω: {data["phone"]}\n")

        await msg.answer("‚úÖ –°–ø–∞—Å–∏–±–æ –∑–∞ –∑–∞—è–≤–∫—É!"
                         "–ú—ã —É–∂–µ –ø–æ–ª—É—á–∏–ª–∏ –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ."
                         "üìû –ù–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è —Å –Ω–æ–º–µ—Ä–∞ 8 963 110 98 86."
                         "‚è≥ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Å—Ç–∞–≤–∞–π—Ç–µ—Å—å –Ω–∞ —Å–≤—è–∑–∏ ‚Äî —Å–∫–æ—Ä–æ –º—ã –¥–æ–≥–æ–≤–æ—Ä–∏–º—Å—è –æ –¥–∞—Ç–µ –ø—Ä–æ–±–Ω–æ–≥–æ –∑–∞–Ω—è—Ç–∏—è!",
                         reply_markup=ReplyKeyboardRemove()
                         )
