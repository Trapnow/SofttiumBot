import asyncio

from aiogram.types import CallbackQuery
from aiogram import Router, F
from keyboards.reply_keyboards import yes_or_no_kb
from aiogram.fsm.context import FSMContext

from states.program_state import Program
from states.trial_session_state import Trial

from aiogram.types import ReplyKeyboardRemove

router = Router(name=__name__)


@router.callback_query(F.data == "tg_chanel")
async def callback_tg_chanel(callback: CallbackQuery):
    await callback.answer("")
    await callback.message.answer("üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º –¥–µ—Ç—Å–∫–∏–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç –Ω–∞ –ø–æ–ª–Ω—É—é –º–æ—â–Ω–æ—Å—Ç—å!\n"
                                  "–ü–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –∫–∞–Ω–∞–ª –Ω–∞—à–µ–π —à–∫–æ–ª—ã –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è –°–æ—Ñ—Ç–∏—É–º –∏ —É–∑–Ω–∞–π—Ç–µ:\n"
                                  "   üîπ –ö–∞–∫ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –¥–µ–ª–∞—é—Ç –¥–µ—Ç–µ–π —É—Å–ø–µ—à–Ω–µ–µ\n"
                                  "   üîπ –ù–∞—à–∏ –∞–∫—Ü–∏–∏ –∏ —Å–æ–±—ã—Ç–∏—è\n"
                                  "   üîπ –ü–æ–±–µ–¥—ã —É—á–µ–Ω–∏–∫–æ–≤ –∏ –≤–¥–æ—Ö–Ω–æ–≤–ª—è—é—â–∏–µ –ø—Ä–æ–µ–∫—Ç—ã\n"
                                  "\n"
                                  "üì≤ –ñ–º–∏—Ç–µ —Å—é–¥–∞ https://t.me/softiumpenza ‚Äî –±—É–¥—É—â–µ–µ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å–µ–≥–æ–¥–Ω—è!",
                                  reply_markup=ReplyKeyboardRemove())


@router.callback_query(F.data == "program")
async def callback_tg_chanel(callback: CallbackQuery, state: FSMContext):
    await callback.answer("")
    await state.set_state(Program.use_computer)
    await callback.message.answer("–û—Ç–≤–µ—Ç–µ –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–æ–ø—Ä–æ—Å–æ–≤, —á—Ç–æ–±—ã –º—ã –º–æ–≥–ª–∏ –ø–æ–¥–æ–±—Ä–∞—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É.")
    await asyncio.sleep(1)
    await callback.message.answer("–ü–æ–ª—å–∑—É–µ—Ç—Å—è –ª–∏ –≤–∞—à —Ä–µ–±–µ–Ω–æ–∫ –ü–ö?", reply_markup=yes_or_no_kb())


@router.callback_query(F.data == "trial_session")
async def callback_trial_session(callback: CallbackQuery, state: FSMContext):
    await callback.answer("")
    await state.set_state(Trial.name)
    await callback.message.answer("–ö–∞–∫ –í–∞—Å –∑–æ–≤—É—Ç?", reply_markup=ReplyKeyboardRemove())
